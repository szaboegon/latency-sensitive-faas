mode: daemonset

image:
  repository: otel/opentelemetry-collector-k8s

presets:
  kubeletMetrics:
    enabled: true
  hostMetrics:
    enabled: true
  logsCollection:
    enabled: true

# should disable this later and use NODE_IP from env variable to send data to collector, this solution will send data to a random collector pod instead of the closest one
service:
  enabled: true

config:
  exporters:
    debug: {}
    otlp/elastic: 
      endpoint: 'apm-server-apm-http.observability.svc.cluster.local:8200'
      headers:
        Authorization: "Bearer elastic"
      tls:
        insecure: true
        insecure_skip_verify: true
  extensions:
    # The health_check extension is mandatory for this chart.
    # Without the health_check extension the collector will fail the readiness and liveliness probes.
    # The health_check extension can be modified, but should never be removed.
    health_check:
      endpoint: 0.0.0.0:13133
  processors:
    batch: {}
    # Default memory limiter configuration for the collector based on k8s resource limits.
    memory_limiter: null
  receivers:
    jaeger: null
    kubeletstats:
      insecure_skip_verify: true
        
    otlp:
      protocols:
        grpc:
          endpoint: 0.0.0.0:4317
        http:
          endpoint: 0.0.0.0:4318
   
    prometheus: null
    zipkin: null

    opencensus: 
      endpoint: 0.0.0.0:55678

  service:
    telemetry:
      logs:
        level: debug
    extensions:
      - health_check
    pipelines:
      logs:
        exporters:
          - debug
          - otlp/elastic
        processors:
          - batch
        receivers:
          - otlp
      metrics:
        exporters:
          - debug
          - otlp/elastic
        processors:
          - batch
        receivers:
          - otlp
          - opencensus
          - kubeletstats
      traces:
        exporters:
          - debug
          - otlp/elastic
        processors:
          - batch
        receivers:
          - otlp