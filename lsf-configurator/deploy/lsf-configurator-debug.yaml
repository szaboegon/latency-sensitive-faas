apiVersion: v1
kind: Namespace
metadata:
  name: configurator
  labels:
    name: configurator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: configurator-role
rules:
  # Knative Serving API
  - apiGroups: ["serving.knative.dev"]
    resources: ["*"]
    verbs: ["*"]

  # Kubernetes Core API (pods, services, configmaps, secrets, etc.)
  - apiGroups: [""]
    resources: ["pods", "services"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]

  # Kubernetes Apps API (deployments, statefulsets, daemonsets)
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets", "daemonsets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: configurator-sa
  namespace: configurator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: configurator-rolebinding
subjects:
  - kind: ServiceAccount
    name: configurator-sa  
    namespace: configurator
roleRef:
  kind: ClusterRole
  name: configurator-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lsf-configurator-deployment
  namespace: configurator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lsf-configurator
  template:
    metadata:
      labels:
        app: lsf-configurator
    spec:
      serviceAccountName: configurator-sa
      terminationGracePeriodSeconds: 300
      containers:
        - name: lsf-configurator
          image: szaboegon/lsf-configurator-debug:latest
          securityContext:
            privileged: true
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 2
          env:
            - name: UPLOAD_DIR
              value: "/uploads/apps"
            - name: IMAGE_REGISTRY
              value: "registry.hub.docker.com/szaboegon"
            - name: TEMPLATES_PATH
              value: "file://templates"
            - name: BUILDER_IMAGE
              value: "docker.io/paketobuildpacks/builder-jammy-base"
            - name: REGISTRY_USER
              valueFrom:
                secretKeyRef:
                  name: registry-secret
                  key: REGISTRY_USER
            - name: REGISTRY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: registry-secret
                  key: REGISTRY_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: lsf-configurator-service
  namespace: configurator
spec:
  type: NodePort
  selector:
    app: lsf-configurator
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 30001


  